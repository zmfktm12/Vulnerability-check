const express = require('express');
const { exec } = require('child_process');
const dns = require('dns');
const path = require('path');
const app = express();
const port = 3000;

app.use(express.urlencoded({ extended: true }));


app.post('/test-ssl', (req, res) => {
  const ip = req.body.ip;

  // OpenSSL 명령 실행
  exec(`openssl s_client -connect ${ip}:443 -tlsextdebug -verbose`, (error, stdout, stderr) => {
    if (error) {
      res.status(500).send(`Error: ${error.message}`);
      return;
    }

    if (stderr) {
      res.status(500).send(`Error: ${stderr}`);
      return;
    }

    // 응답 헤더에 인코딩 및 컨텐츠 타입 설정 추가
    res.header('Content-Type', 'text/plain; charset=utf-8');
    res.header('Content-Disposition', 'inline');

    // 명령 결과를 클라이언트에게 전달
    res.send(stdout);
  });
});
app.use(express.static(path.join(__dirname, 'public')));




app.get('/test-openresolver', (req, res) => {
  const domain = req.query.domain;

  // DNS 쿼리를 통해 Open Resolver 확인
  dns.resolve(domain, (err, addresses) => {
    if (err) {
      console.error(`Error: ${err.message}`);
      res.status(500).json({ isOpenResolver: false });
      return;
    }

    const isOpenResolver = addresses.length > 0;
    res.json({ isOpenResolver });
  });
});

app.listen(port, () => {
  console.log(`Server is running at http://localhost:${port}`);
});